{"version":3,"file":"static/js/712.4f52fbcb.chunk.js","mappings":"2KA8BA,UA3BwB,WAEpB,IAAMA,GAAeC,EAAAA,EAAAA,GAAaC,EAAAA,IAElC,GAAqB,OAAjBF,EAIJ,OACI,8BAC6B,IAAxBA,EAAaG,QACR,wBACGH,EAAaI,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACI,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,EAKhB,OAEH,4DAIjB,C,gHCzBYJ,EAAe,SAACO,GAEzB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,6GAEIP,EAAUC,GAFd,OAETO,EAFS,OAGfH,EAASG,GAHM,gDAKfC,QAAQC,IAAR,MALe,iEAAH,qDAQpBH,GACH,GAAE,CAACN,EAASD,IAENI,CACV,C","sources":["components/FilmReviews.jsx","hooks/useFetchData.jsx"],"sourcesContent":["import { fetchReviewsFilmById } from \"services/fetchFilms\";\nimport { useFetchData } from \"hooks/useFetchData\";\n\nconst ShowFilmReviews = () => {\n\n    const movieReviews = useFetchData(fetchReviewsFilmById);\n\n    if (movieReviews === null) {\n        return;\n    };\n    \n    return (\n        <>\n            {movieReviews.length !== 0\n                ? <ul>\n                    {movieReviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <h3>Author: {author}</h3>\n                                <p>{content}</p>\n                            </li>\n                        )\n                    })}\n                </ul>\n                : <p>Sorry, there are no reviews yet</p>\n            }\n        </>\n    );\n};\n\nexport default ShowFilmReviews;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const useFetchData = (fetchData) => {\n\n    const { movieId } = useParams();\n\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        const createFilmInfo = async () => {\n            try {\n                const film = await fetchData(movieId);\n                setMovie(film);\n            } catch (error) {\n                console.log(error)\n            };\n        };\n        createFilmInfo()\n    }, [movieId, fetchData]);\n\n    return movie;\n};"],"names":["movieReviews","useFetchData","fetchReviewsFilmById","length","map","id","author","content","fetchData","movieId","useParams","useState","movie","setMovie","useEffect","createFilmInfo","film","console","log"],"sourceRoot":""}