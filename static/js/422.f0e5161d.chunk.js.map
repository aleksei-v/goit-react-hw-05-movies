{"version":3,"file":"static/js/422.f0e5161d.chunk.js","mappings":"gOAGaA,EAAe,SAACC,GAEzB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,6GAEIP,EAAUC,GAFd,OAETO,EAFS,OAGfH,EAASG,GAHM,gDAKfC,QAAQC,IAAR,MALe,iEAAH,qDAQpBH,GACH,GAAE,CAACN,EAASD,IAENI,CACV,C,yICnBYO,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iXAEN,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAE1B,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAtB,IAEG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IAGE,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,OAAnB,IACZ,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,KAAnB,IAIG,SAAAT,GAAC,OAAIA,EAAEC,MAAMM,OAAOG,MAAnB,IAMLC,GAAUb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,yPAIX,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGH,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,OAAOM,IAAnB,IAEY,SAAAb,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,OAAnB,IACZ,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,KAAnB,I,kBCed,EA1CqB,WAAO,IAAD,IAEjBnB,GAAQL,EAAAA,EAAAA,GAAa6B,EAAAA,IAErBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAK1B,EAAL,CAIA,IAAM2B,EAAW,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QAEpCC,EAAuD9B,EAAvD8B,YAAaC,EAA0C/B,EAA1C+B,MAAOC,EAAmChC,EAAnCgC,aAAcC,EAAqBjC,EAArBiC,SAAUC,EAAWlC,EAAXkC,OAEpD,OACI,UAACC,EAAA,EAAD,CAAKzB,EAAG,EAAR,WACI,SAACH,EAAD,CAAU6B,GAAIT,EAAd,uBACA,UAACQ,EAAA,EAAD,CAAKE,QAAQ,OAAOC,WAAW,SAASC,eAAe,eAAeC,QAAS,EAAGC,GAAI,EAAtF,WACI,SAACN,EAAA,EAAD,CAAKO,GAAG,MAAMC,MAAM,QAAQC,GAAI,EAC5BC,IAAG,6CAAwCf,GAC3CgB,IAAKf,KAET,4BACI,wBAAKA,KACL,yCAAe,0BAAOC,EAAae,QAAQ,SAC3C,sCACA,uBAAId,KACJ,oCACA,uBAAIC,EAAOc,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAGhD,UAACf,EAAA,EAAD,YACI,SAACd,EAAD,CAASe,GAAG,OAAOR,MAAO,CAAEC,KAAMF,GAAlC,mBACA,SAACN,EAAD,CAASe,GAAG,SAASR,MAAO,CAAEC,KAAMF,GAApC,wBAEJ,SAAC,EAAAwB,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QA5BX,CAgCJ,C","sources":["hooks/useFetchData.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const useFetchData = (fetchData) => {\n\n    const { movieId } = useParams();\n\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        const createFilmInfo = async () => {\n            try {\n                const film = await fetchData(movieId);\n                setMovie(film);\n            } catch (error) {\n                console.log(error)\n            };\n        };\n        createFilmInfo()\n    }, [movieId, fetchData]);\n\n    return movie;\n};","import { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const BackLink = styled(Link)`\n   \n    padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n    text-decoration: none;\n    border-radius: ${p => p.theme.radii.normal};\n    border: none;\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n    transition: color 250ms linear, \n    scale 250ms linear;\n    :hover {\n        color: ${p => p.theme.colors.accent};\n        scale: 1.1;\n    }\n\n`\n\nexport const NavItem = styled(NavLink)`\n  display: block;\n  width: 100px;\n  align-items: center;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n   &.active {\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n\n`;","import { fetchFilmById } from \"services/fetchFilms\";\nimport { Outlet, useLocation} from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { Box } from \"../../components/Box\";\nimport { BackLink, NavItem } from \"./MovieDetails.styled\";\nimport { useFetchData } from \"hooks/useFetchData\";\n\nconst MovieDetails = () => {\n\n    const movie = useFetchData(fetchFilmById);\n   \n    const location = useLocation();\n\n    if (!movie) {\n        return;\n    };\n\n    const backLinkRef = location.state?.from ?? \"/home\";\n\n    const { poster_path, title, vote_average, overview, genres } = movie;\n    \n    return (\n        <Box p={5}>\n            <BackLink to={backLinkRef}>Go back </BackLink>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-around\" gridGap={6} mt={5}>\n                <Box as='img' width=\"200px\" mb={5}\n                    src={`https://www.themoviedb.org/t/p/w500${poster_path}`}\n                    alt={title} />\n              \n                <div>\n                    <h2>{title}</h2>\n                    <p>User score: <span>{vote_average.toFixed(1)}</span></p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genres.map(({ name }) => name).join(', ')}</p>\n                </div>\n            </Box>\n            <Box>\n                <NavItem to=\"cast\" state={{ from: backLinkRef }}>Cast</NavItem>\n                <NavItem to=\"review\" state={{ from: backLinkRef }}>Review</NavItem>\n            </Box>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </Box>\n    )\n};\n\nexport default MovieDetails;"],"names":["useFetchData","fetchData","movieId","useParams","useState","movie","setMovie","useEffect","createFilmInfo","film","console","log","BackLink","styled","Link","p","theme","space","fontSizes","m","radii","normal","colors","primary","white","accent","NavItem","NavLink","text","fetchFilmById","location","useLocation","backLinkRef","state","from","poster_path","title","vote_average","overview","genres","Box","to","display","alignItems","justifyContent","gridGap","mt","as","width","mb","src","alt","toFixed","map","name","join","Suspense","fallback"],"sourceRoot":""}